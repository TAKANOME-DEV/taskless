{
  "name": "@taskless/client",
  "version": "1.0.0-next.13",
  "description": "Client for Taskless.io",
  "author": {
    "name": "Taskless.io",
    "email": "oss@taskless.io",
    "url": "https://taskless.io"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/taskless/taskless.git",
    "directory": "packages/taskless"
  },
  "homepage": "https://github.com/taskless/taskless/tree/main/packages/taskless",
  "license": "MIT",
  "main": "dist/cjs/index.js",
  "module": "dist/esm/index.js",
  "types": "index.d.js",
  "exports": {
    ".": {
      "import": "./dist/esm/index.js",
      "require": "./dist/cjs/index.js",
      "types": "./index.d.ts"
    },
    "./dev": {
      "import": "./dist/esm/dev.js",
      "require": "./dist/cjs/dev.js",
      "types": "./dev.d.ts"
    },
    "./next": {
      "import": "./dist/esm/integrations/next.js",
      "require": "./dist/cjs/integrations/next.js",
      "types": "./next.d.ts"
    },
    "./express": {
      "import": "./dist/esm/integrations/express.js",
      "require": "./dist/cjs/integrations/express.js",
      "types": "./express.d.ts"
    }
  },
  "files": [
    "dist",
    "dev.js",
    "dev.d.ts",
    "express.js",
    "express.d.ts",
    "next.js",
    "next.d.ts",
    "index.d.ts"
  ],
  "engines": {
    "node": "12 || 14 || 15 || 16 || 17"
  },
  "scripts": {
    "dev": "run-s clean build watch",
    "docs": "run-s typedoc typedoc:prettier",
    "// build": "echo 'Build commands based on SenseDeep: https://www.sensedeep.com/blog/posts/2021/how-to-create-single-source-npm-module.html'",
    "build": "run-s clean codegen 'build:tsc:**' 'build:copy:**'",
    "build:tsc:esm": "tsc",
    "build:tsc:cjs": "tsc -p tsconfig-cjs.json",
    "build:copy:esm": "cpy --flat --rename=package.json ./.templates/package.esm.json ./dist/esm",
    "build:copy:cjs": "cpy --flat --rename=package.json ./.templates/package.cjs.json ./dist/cjs",
    "// watch": "echo 'Watch commands for different build types'",
    "watch": "run-p 'watch:**'",
    "watch:docs": "typedoc --watch",
    "watch:tsc:esm": "tsc -w",
    "watch:tsc:cjs": "tsc -w -p tsconfig-cjs.json",
    "// utilities": "echo 'Utilities used for development, including release hooks'",
    "lint": "eslint",
    "eslint": "eslint",
    "madge": "madge",
    "clean": "rm -rf dist",
    "test": "echo \"Error: no test specified\" && exit 0",
    "codegen": "graphql-codegen",
    "typedoc": "typedoc",
    "typedoc:prettier": "prettier --write ../../docs/client/api",
    "prettier": "prettier",
    "release:before:init": "run-s clean build test docs"
  },
  "dependencies": {
    "deepmerge": "^4.2.2",
    "generic-type-guard": "^3.6.0",
    "p-retry": "^5.0.0",
    "phin": "^3.6.1"
  },
  "devDependencies": {
    "@babel/core": "^7.17.5",
    "@babel/eslint-parser": "^7.17.0",
    "@graphql-codegen/cli": "^2.6.2",
    "@graphql-codegen/introspection": "^2.1.1",
    "@graphql-codegen/time": "^3.1.1",
    "@graphql-codegen/typescript": "^2.4.5",
    "@graphql-codegen/typescript-generic-sdk": "^2.3.4",
    "@graphql-codegen/typescript-operations": "^2.3.2",
    "@types/babel__core": "^7",
    "@types/deepmerge": "^2.2.0",
    "@types/eslint": "^8",
    "@types/express": "^4.17.13",
    "@types/prettier": "^2",
    "@types/react": "^17",
    "@types/react-dom": "^17",
    "@typescript-eslint/eslint-plugin": "^5.13.0",
    "@typescript-eslint/parser": "^5.13.0",
    "cpy-cli": "^4.1.0",
    "eslint": "^8.10.0",
    "eslint-plugin-tsc": "^2.0.0",
    "express": "^4.17.3",
    "graphql": "^15.0.0",
    "graphql-tag": "^2.12.6",
    "madge": "^5.0.1",
    "next": "^12.1.0",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.6.0",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "tsdef": "^0.0.14",
    "typedoc": "^0.22.13",
    "typedoc-plugin-markdown": "^3.11.14",
    "typescript": "^4.6.2"
  },
  "peerDependencies": {
    "express": ">= 4.16.0",
    "next": "^10.0.8 || ^11.0 || ^12.0"
  },
  "peerDependenciesMeta": {
    "express": {
      "optional": true
    },
    "next": {
      "optional": true
    }
  },
  "publishConfig": {
    "access": "public"
  }
}
